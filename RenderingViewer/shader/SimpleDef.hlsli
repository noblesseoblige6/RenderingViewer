//-------------------------------------------------------------------------------------------------
// File : SimpleDef.hlsli
// Desc : Data Layout.
// Copyright(c) Project Asura. All right reserved.
//-------------------------------------------------------------------------------------------------


///////////////////////////////////////////////////////////////////////////////////////////////////
// VSInput structure
///////////////////////////////////////////////////////////////////////////////////////////////////
struct VSInput
{
    float3  Position : POSITION;
    float3  Normal   : NORMAL;
    float2  TexCoord : TEXCOORD;
    float4  Color    : VTX_COLOR;
};

///////////////////////////////////////////////////////////////////////////////////////////////////
// VSOutput structure
///////////////////////////////////////////////////////////////////////////////////////////////////
struct VSOutput
{
    float4  Position : SV_POSITION;
    float3  Normal   : NORMAL;
    float2  TexCoord : TEXCOORD;
    float4  Color    : VTX_COLOR;
};

///////////////////////////////////////////////////////////////////////////////////////////////////
// PSOutput structure
///////////////////////////////////////////////////////////////////////////////////////////////////
struct PSOutput
{
    float4  Color   : SV_TARGET0;
};

///////////////////////////////////////////////////////////////////////////////////////////////////
// TransformBuffer constant buffer
///////////////////////////////////////////////////////////////////////////////////////////////////
cbuffer TransformBuffer : register(b0)
{
    float4x4 World : packoffset(c0);
    float4x4 View  : packoffset(c4);
    float4x4 Proj  : packoffset(c8);
};

///////////////////////////////////////////////////////////////////////////////////////////////////
// TransformBuffer constant buffer
///////////////////////////////////////////////////////////////////////////////////////////////////
cbuffer LightDataBuffer : register(b1)
{
    float4 Position   : packoffset(c0);
    float3 Direction : packoffset(c1);
    float3 Intensity : packoffset(c2);
    float4 Color     : packoffset(c3);
};

cbuffer Material : register(b2)
{
    float3 Ka : packoffset(c0);
    float3 Kd : packoffset(c1);
    float3 Ks : packoffset(c2);

    float Shininess : packoffset(c2.w);
}
