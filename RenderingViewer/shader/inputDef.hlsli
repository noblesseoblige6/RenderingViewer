//-------------------------------------------------------------------------------------------------
// File : SimpleDef.hlsli
// Desc : Data Layout.
// Copyright(c) Project Asura. All right reserved.
//-------------------------------------------------------------------------------------------------


///////////////////////////////////////////////////////////////////////////////////////////////////
// VSInput structure
///////////////////////////////////////////////////////////////////////////////////////////////////
struct VSInput
{
    float3  Position : POSITION;
    float3  Normal   : NORMAL;
    float2  TexCoord : TEXCOORD;
    float4  Color    : VTX_COLOR;
};

///////////////////////////////////////////////////////////////////////////////////////////////////
// VSOutput structure
///////////////////////////////////////////////////////////////////////////////////////////////////
struct VSOutput
{
    float4  Position : SV_POSITION;
    float4  WorldPos : POSITION;
    float3  Normal   : NORMAL;
    float2  TexCoord : TEXCOORD;
    float4  Color    : VTX_COLOR;
};

///////////////////////////////////////////////////////////////////////////////////////////////////
// PSOutput structure
///////////////////////////////////////////////////////////////////////////////////////////////////
struct PSOutput
{
    float4  Color   : SV_TARGET0;
};

///////////////////////////////////////////////////////////////////////////////////////////////////
// TransformBuffer constant buffer
///////////////////////////////////////////////////////////////////////////////////////////////////
cbuffer TransformBuffer : register(b0)
{
    float4x4 World : packoffset(c0);
    float4x4 View  : packoffset(c4);
    float4x4 Proj  : packoffset(c8);
    float4x4 invMat : packoffset(c12);

    float3x3 NormalMat  : packoffset(c16);
};

///////////////////////////////////////////////////////////////////////////////////////////////////
// LightDataBuffer constant buffer
///////////////////////////////////////////////////////////////////////////////////////////////////
cbuffer LightDataBuffer : register(b1)
{
    float4 Position  : packoffset(c0);
    float4 Color     : packoffset(c1);
    
    float4x4 LightView     : packoffset(c2);
    float4x4 LightProj     : packoffset(c6);

    float3 Direction : packoffset(c10);
    float3 Intensity : packoffset(c11);
};

///////////////////////////////////////////////////////////////////////////////////////////////////
// Material constant buffer
///////////////////////////////////////////////////////////////////////////////////////////////////
cbuffer Material : register(b2)
{
    float4 Ka : packoffset(c0);
    float4 Kd : packoffset(c1);
    float3 Ks : packoffset(c2);

    float Shininess : packoffset(c2.w);
}

Texture2D       ShadowMap : register(t0);
SamplerState    ShadowSmp     : register(s0);
